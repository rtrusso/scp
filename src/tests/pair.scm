(define test-case-number 0)
(define-syntax test
  (syntax-rules ()
    ((_ expression)
     (begin (set! test-case-number (+ test-case-number 1))
            (display "case ")
            (display test-case-number)
            (display ": ")
            (newline)
            (display 'expression)
            (display " => ")
            (display expression)
            (newline)
            (newline)))))

(test (cons 'a (list 'b 'c 'd)))
(test (cdr (list 'a 'b 'c 'd)))
(define l1 (list 1 2 3))
(define l2 (list 4 5 6))
(test l1)
(test (set-car! l1 7))
(test l1)
(test (set-car! l1 1))
(test l1)
(test (set-cdr! (cddr l1) l2))
(test l2)
(test l1)
