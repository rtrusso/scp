(define test-case-number 0)
(define-syntax test
  (syntax-rules ()
    ((_ expression)
     (begin (set! test-case-number (+ test-case-number 1))
            (display "case ")
            (display test-case-number)
            (display ": ")
            (newline)
            (display 'expression)
            (display " => ")
            (display expression)
            (newline)
            (newline)))))

(test (< 3 1))
(test (< 1 3))
(test (< 1 1))
(test (< 1 -1))
(test (< 10 9 8 7 6 5 4 3 2 1))
(test (< 10 9 8 7 6 5 4 3 2 1 2))
(test (< 1 1 1 1 1 1 1))
(test (< 1 2 3 4 5 6 7 8 9 10))
(test (<= 1 2 3 4 5 6 7 8 9 10))
(test (<= 1 1 1 1 1 1 1))
(test (<= 10 9 8 7 6 5 4))
(test (<= 4 5 6 7 8 9 10))
(test (<= 4 5 6 7 8 9 10 -1))
(test (<= 10 9 8  7 6 5 -1 -1))
(test (<= 9 8 10))
(test (<= 3 1))
(test (<= 1 1))
(test (<= -1 1))
