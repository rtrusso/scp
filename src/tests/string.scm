(define test-case-number 0)
(define-syntax test
  (syntax-rules ()
    ((_ expression)
     (begin (set! test-case-number (+ test-case-number 1))
            (display "case ")
            (display test-case-number)
            (display ": ")
            (newline)
            (write 'expression)
            (display " => ")
            (write expression)
            (newline)
            (newline)))))

(test (string #\a #\b #\c))
(test (string=? "asdf" "jkl"))
(test (string=? "asdf" "asdf"))
(test (string=? "asdf45678" "asdf"))
(test (string=? "asdf" "asdf45678"))
(test (string=? "asdf" "Asdf"))
(test (string-ci=? "asdf" "AsDf"))
(test (string<? "asdf0" "asdf1"))
(test (string<? "asdf1" "asdf"))
(test (string<? "asdfghjkl1" "asdf"))
(test (string<? "asdf" "asdfjkl1"))
(test (string>? "asdf1" "asdf0"))
(test (string>? "asdfhjkl1" "asdf"))
(test (string>? "asdf" "asdfhjkl1"))

