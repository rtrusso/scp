(define test-case-number 0)
(define-syntax test
  (syntax-rules ()
    ((_ expression)
     (begin (set! test-case-number (+ test-case-number 1))
            (display "case ")
            (display test-case-number)
            (display ": ")
            (newline)
            (display 'expression)
            (display " => ")
            (display expression)
            (newline)
            (newline)))))

(test (char? #\a))
(test (char? #\0))
(test (char? 0))
(test (char=? #\a #\a))
(test (char=? #\a #\b))
(test (char<? #\a #\a))
(test (char<? #\a #\b))
(test (char<? #\a #\z))
(test (char>? #\a #\a))
(test (char>? #\z #\a))
(test (char>? #\9 #\1))
(test (char<=? #\a #\a))
(test (char<=? #\a #\b))
(test (char<=? #\a #\z))
(test (char>=? #\a #\a))
(test (char>=? #\z #\a))
(test (char>=? #\9 #\1))
(test (integer->char (char->integer #\0)))
(test (integer->char (char->integer #\newline)))
(test (char->integer (integer->char 65)))
