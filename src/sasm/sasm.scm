;; sasm.scm
;; SASM assembler

(need sasm/sasm-tx)
(need util/output-file)

(define *sasm-version* ";; generated by sasm 12-25-2018 0.1")

(define (sasm-assembler-main *argv*)
  (cond ((= 1 (vector-length *argv*))
         (sasm-assemble-port (current-input-port)))
        ((= 2 (vector-length *argv*))
         (call-with-input-file (vector-ref *argv* 1) sasm-assemble-port))
        ((and (= 3 (vector-length *argv*))
              (starts-with? (vector-ref *argv* 2)
                            "--out="))
         (let* ((output-file (string-strip-prefix (vector-ref *argv* 2)
                                                  "--out="))
                (output-file-tmp (string-append output-file ".tmp"))
                (input-file (vector-ref *argv* 1))
                (input-fs (read-fs input-file))
                (output-fs (read-fs output-file)))
           (if (and (fs-exists? input-fs)
                    (fs-exists? output-fs)
                    (fs-newer? output-fs input-fs)
                    (check-output-version *sasm-version* output-file))
               (begin (display ";; output file ")
                      (display output-file)
                      (display " up-to-date: ")
                      (display input-file)
                      (newline))
               (begin
                 (delete-if-exists! output-file-tmp)
                 (delete-if-exists! output-file)
                 (set! *sasm-assembler-output-port*
                       (open-output-file output-file-tmp))
                 (display *sasm-version* *sasm-assembler-output-port*)
                 (newline *sasm-assembler-output-port*)
                 (sasm-assembler-main (vector (vector-ref *argv* 0)
                                              (vector-ref *argv* 1)))
                 (close-output-port *sasm-assembler-output-port*)
                 (rename-temp-file! output-file-tmp output-file)
                 ))))
        ((and (= 4 (vector-length *argv*))
              (string=? (vector-ref *argv* 1)
                        "--debug"))
         (set! *sasm-enable-debug-output* #t)
         (sasm-assembler-main (vector (vector-ref *argv* 0)
                                      (vector-ref *argv* 2)
                                      (vector-ref *argv* 3))))
        (else
         (error "Invalid command line " *argv*))))
